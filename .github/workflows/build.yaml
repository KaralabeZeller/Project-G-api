# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. Triggers the workflow on push
# events but only for the master branch
on:
  push:
    branches: [ master ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a multiple jobs called "build" and "deploy"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:

      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout project
        uses: actions/checkout@v2

      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8

      - name: Cache for Maven
        uses: actions/cache@v1
        id: cache
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
            ${{ runner.os }}-maven-

      - name: Build with Maven
        run: mvn -B verify --file pom.xml

      - name: Publish artifact
        uses: actions/upload-artifact@v2-preview
        with:
          name: project-g-api.jar
          path: ./target/*.jar

  deploy:
    needs: build

    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: Setup Python 2.7
        uses: actions/setup-python@v1
        with:
          # Version range or exact version of a Python version to use, using SemVer's version range syntax.
          python-version: 2.7 # optional, default is 3.x

      - name: Setup gcloud environment
        uses: GoogleCloudPlatform/github-actions@master
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          service_account_email: ${{ secrets.GCP_SA_EMAIL }}
          service_account_key: ${{ secrets.GCP_SA_KEY }}
          export_default_credentials: true

      - name: Download artifact
        uses: actions/download-artifact@v2-preview
        with:
          name: project-g-api.jar
          path: ./

      - name: Find application artifact
        run: echo ::set-env name=JAR::$(basename *.jar)

      - name: Deploy application with SCP
        run: gcloud compute scp *.jar project-g-api-ci@project-g-1:~/ --zone=europe-west3-c --ssh-key-expire-after=1h

      - name: Restart application with init.d
        run: gcloud compute ssh project-g-api-ci@project-g-1 --zone=europe-west3-c --ssh-key-expire-after=1h -- "ln -sf ~/${{ env.JAR }} ~/project-g-api && sudo systemctl daemon-reload && sudo service project-g-api restart"
